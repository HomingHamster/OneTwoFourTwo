diff --git a/bin/oneTwoFourTwo/DiagramPanel.class b/bin/oneTwoFourTwo/DiagramPanel.class
index 6f94bb5..dc5ca37 100755
Binary files a/bin/oneTwoFourTwo/DiagramPanel.class and b/bin/oneTwoFourTwo/DiagramPanel.class differ
diff --git a/bin/oneTwoFourTwo/DragAndDropClassObject.class b/bin/oneTwoFourTwo/DragAndDropClassObject.class
index be08719..89c43b8 100755
Binary files a/bin/oneTwoFourTwo/DragAndDropClassObject.class and b/bin/oneTwoFourTwo/DragAndDropClassObject.class differ
diff --git a/bin/oneTwoFourTwo/DragAndDropController.class b/bin/oneTwoFourTwo/DragAndDropController.class
index b8cf162..1b60900 100755
Binary files a/bin/oneTwoFourTwo/DragAndDropController.class and b/bin/oneTwoFourTwo/DragAndDropController.class differ
diff --git a/src/oneTwoFourTwo/DiagramPanel.java b/src/oneTwoFourTwo/DiagramPanel.java
index 165496c..dc6e4f9 100755
--- a/src/oneTwoFourTwo/DiagramPanel.java
+++ b/src/oneTwoFourTwo/DiagramPanel.java
@@ -45,6 +45,7 @@ public class DiagramPanel extends JPanel{
 	public void paintComponent(Graphics g) {
 		super.paintComponent(g);
 		this.controller.drawAll(g);
+		this.controller.drawLinks(g);
 	}
 	
 	/*
diff --git a/src/oneTwoFourTwo/DragAndDropClassObject.java b/src/oneTwoFourTwo/DragAndDropClassObject.java
index 34f75f0..288fb6f 100755
--- a/src/oneTwoFourTwo/DragAndDropClassObject.java
+++ b/src/oneTwoFourTwo/DragAndDropClassObject.java
@@ -14,6 +14,7 @@ import java.awt.Graphics;
 import java.awt.Graphics2D;
 import java.awt.Rectangle;
 import java.awt.RenderingHints;
+import java.util.Vector;
 
 import javax.swing.JPanel;
 
@@ -22,6 +23,7 @@ import javax.swing.JPanel;
 @SuppressWarnings("serial")
 
 public class DragAndDropClassObject extends JPanel {
+	Vector<Link> links = new Vector<Link>();
 	ClassObject classObject;
 	Rectangle rect;
 	String name;
diff --git a/src/oneTwoFourTwo/DragAndDropController.java b/src/oneTwoFourTwo/DragAndDropController.java
index ce19782..7a75569 100755
--- a/src/oneTwoFourTwo/DragAndDropController.java
+++ b/src/oneTwoFourTwo/DragAndDropController.java
@@ -68,6 +68,7 @@ public class DragAndDropController extends MouseInputAdapter{
 	        		renameClass(components.get(i).name);
 	        		return;
 	        	} else if (s=="add link"){
+	        		addLink(components.get(i).name);
 	        		return;
 	        	} else {
 	        		System.out.println("uh oh!");
@@ -154,6 +155,21 @@ public class DragAndDropController extends MouseInputAdapter{
 			}
 		}
 	}
+	
+	public void addLink(String classOneName){
+		for (int i=0;i<components.size();i++){
+			if (components.get(i).name == classOneName){
+				String classTwoName = 
+					JOptionPane.showInputDialog("Enter Class Two Name:");
+				String oneToManyQuantifier = 
+					JOptionPane.showInputDialog("Enter a quantifier:");
+				components.get(i).links.add(new Link(classTwoName, 
+						oneToManyQuantifier));
+				diagramPanel.repaint();
+				return;
+			}
+		}
+	}
  
 	/*
 	 * (non-Javadoc)
@@ -192,4 +208,30 @@ public class DragAndDropController extends MouseInputAdapter{
 			currentClass.paintComponent(g);
 		}
 	}
+	
+	/*
+	 * Some funky jazz to draw the links, 
+	 * TODO: draw the arrow head.
+	 * TODO: draw the quantifier.
+     * TODO: change from one line into two squared parts.
+	 */
+	public void drawLinks(Graphics g){
+		Vector<Link> currentLinks;
+		String obj;
+
+		for(int i=0; i < components.size(); i++) {
+			currentLinks = (Vector<Link>)(components.get(i).links);
+			for(int j=0; j < currentLinks.size(); j++) {
+				Link currentLink = currentLinks.get(j);
+
+				for(int m=0; m < components.size(); m++) {
+					obj = components.get(m).name;
+					if (obj.equals(currentLink.classTwoName)){
+						currentLink.paintComponent(g, components.get(i), components.get(m));
+						break;
+					}
+				}
+			}
+		}
+	}
 }
\ No newline at end of file
